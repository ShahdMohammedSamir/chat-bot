{"ast":null,"code":"var _jsxFileName = \"B:\\\\PTB de\\\\Chat\\\\chatbot-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [userInput, setUserInput] = useState('');\n  const [chat, setChat] = useState([]);\n  const sendMessage = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5198/api/Chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          userMessage: userInput\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      const data = await response.json();\n      setChat([...chat, data]);\n      setUserInput('');\n    } catch (error) {\n      console.error(\"Error:\", error);\n      alert(\"Could not reach the chatbot API.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chat with Samsoma \\uD83E\\uDD16\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: chat.map((c, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"You:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 16\n          }, this), \" \", c.userMessage]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Bot:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 16\n          }, this), \" \", c.botResponse]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: userInput,\n      onChange: e => setUserInput(e.target.value),\n      placeholder: \"Type your message...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"JABfUQnE9lb562Ok1o7q+iVdqVw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","userInput","setUserInput","chat","setChat","sendMessage","response","fetch","method","headers","body","JSON","stringify","userMessage","ok","Error","data","json","error","console","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","c","index","botResponse","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["B:/PTB de/Chat/chatbot-frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [userInput, setUserInput] = useState('');\n  const [chat, setChat] = useState([]);\n\n const sendMessage = async () => {\n  try {\n    const response = await fetch(\"http://localhost:5198/api/Chat\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({ userMessage: userInput })\n    });\n\n    if (!response.ok) {\n      throw new Error(\"Network response was not ok\");\n    }\n\n    const data = await response.json();\n    setChat([...chat, data]);\n    setUserInput('');\n  } catch (error) {\n    console.error(\"Error:\", error);\n    alert(\"Could not reach the chatbot API.\");\n  }\n\n };\n\n  return (\n    <div className=\"App\">\n      <h1>Chat with Samsoma ðŸ¤–</h1>\n      <div className=\"chat-box\">\n        {chat.map((c, index) => (\n          <div key={index}>\n            <p><strong>You:</strong> {c.userMessage}</p>\n            <p><strong>Bot:</strong> {c.botResponse}</p>\n          </div>\n        ))}\n      </div>\n      <input\n        value={userInput}\n        onChange={(e) => setUserInput(e.target.value)}\n        placeholder=\"Type your message...\"\n      />\n      <button onClick={sendMessage}>Send</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}